<?php

namespace PPRH;

if ( ! defined( 'ABSPATH' ) ) {
	exit;
}

new General_Settings();

class General_Settings {

	protected $load_adv = false;

	public function __construct() {
		$this->init();
	}

	public function init() {
		?>
        <div id="pprh-general-settings" class="pprh-content">
            <h2 style="margin-top: 30px;"><?php esc_html_e( 'General Settings', 'pprh' ); ?></h2>
            <form method="post" action="<?php echo PPRH_HOME_URL; ?>">
                <?php
                    wp_nonce_field( 'pprh_save_admin_options', 'pprh_admin_options_nonce' );
                    $this->save_user_options();
                    $this->general_settings();
                ?>

                <div class="text-center">
                    <input type="submit" name="pprh_save_options" class="button button-primary" value="<?php esc_attr_e( 'Save Changes', 'pprh' ); ?>" />
                </div>

            </form>
        </div>
		<?php
	}

	public function general_settings() {
		?>
            <table class="pprh-settings-table">
                <tbody>
				<?php
                    $this->disable_auto_wp_hints();
                    $this->set_hint_destination();
                    $this->verify_hints_are_active();
                    do_action( 'pprh_sc_general_settings' );
				?>
                </tbody>
            </table>
		<?php
	}

	public function disable_auto_wp_hints() {
		?>
        <tr>
            <th><?php esc_html_e( 'Disable automatically generated WordPress resource hints?', 'pprh' ); ?></th>

            <td>
				<span class="pprh-help-tip-hint">
					<span><?php esc_html_e( 'This option will remove three resource hints automatically generated by WordPress, as of 4.8.2.', 'pprh' ); ?></span>
				</span>
            </td>

            <td>
                <label>
                    <select name="disable_wp_hints">
                        <option value="true" <?php Utils::get_option_status( 'disable_wp_hints', 'true' ); ?>>
							<?php esc_html_e( 'Yes', 'pprh' ); ?>
                        </option>
                        <option value="false" <?php Utils::get_option_status( 'disable_wp_hints', 'false' ); ?>>
							<?php esc_html_e( 'No', 'pprh' ); ?>
                        </option>
                    </select>
                </label>
            </td>
        </tr>

		<?php
	}

	public function set_hint_destination() {
		?>
        <tr>
            <th><?php esc_html_e( 'Send resource hints in HTML head or HTTP header?', 'pprh' ); ?></th>

            <td>
				<span class="pprh-help-tip-hint">
					<span><?php esc_html_e( 'Sending hints in the HTTP header allows the browser to receive them sooner, but they will be slightly more difficult to observe than loading them in the HTML head.', 'pprh' ); ?></span>
				</span>
            </td>

            <td>
                <select id="pprhHintLocation" name="html_head">
                    <option value="true" <?php Utils::get_option_status( 'html_head', 'true' ); ?>>
						<?php esc_html_e( 'HTML &lt;head&gt;', 'pprh' ); ?>
                    </option>
                    <option value="false" <?php Utils::get_option_status( 'html_head', 'false' ); ?>>
						<?php esc_html_e( 'HTTP Header', 'pprh' ); ?>
                    </option>
                </select>
            </td>
        </tr>

		<?php
	}

	public function verify_hints_are_active() {
		?>
        <tr>
            <th><?php esc_html_e( 'Verify resource hints are being loaded correctly on front end?', 'pprh' ); ?></th>

            <td>
				<span class="pprh-help-tip-hint">
					<span><?php esc_html_e( 'Frequently caching systems (plugins, web hosts, browsers) can prevent the visibility of resource hints on your website. This feature will check if hints are visible, and will recommend clearing your cache out otherwise.', 'pprh' ); ?></span>
				</span>
            </td>

            <td>
                <input type="submit" name="pprh_verify_hints" id="pprhVerifyHints" value="<?php esc_html_e('Verify hints', 'pprh' ); ?>" class="button button-secondary"/>
            </td>
        </tr>

		<?php
	}

	public function save_user_options() {
		if ( isset( $_POST['pprh_save_options'] ) && check_admin_referer( 'pprh_save_admin_options', 'pprh_admin_options_nonce' ) ) {
            update_option( 'pprh_disable_wp_hints', wp_unslash( $_POST['disable_wp_hints'] ) );
            update_option( 'pprh_html_head', wp_unslash( $_POST['html_head'] ) );
            do_action( 'pprh_pro_save_settings' );

			if ( isset( $_POST['pprhPostModalType'] ) ) {
				$json = json_encode( wp_unslash( $_POST['pprhPostModalType'] ) );
				update_option( 'pprh_pro_post_modal_types', $json );
			}

            if ( isset( $_POST['replace_dup_nonglobals'] ) ) {
				$val = Utils::strip_non_alpha( $_POST['replace_dup_nonglobals'] );
				update_option( 'pprh_replace_dup_nonglobals', $val );
			}

		} elseif ( isset( $_POST['pprh_verify_hints'] ) ) {
			new Verify_Hints();
		}

	}

}


