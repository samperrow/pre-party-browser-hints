<?php

if ( ! defined( 'ABSPATH' ) ) {
	exit;
}

class PPRH_Settings {

	public function __construct() {
		$this->display_settings();
	}

	public function display_settings() {
		?>
			<div id="pprh-settings">
				<form method="post">
					<?php
						$this->save_user_options();
						$this->settings_html();
					?>
				</form>
			</div>
		<?php
	}

	public function save_user_options() {

		if ( isset( $_POST['pprh_preconnects_set'] ) ) {
			update_option( 'pprh_preconnects_set', 'false' );
		}

		if ( isset( $_POST['pprh_save_user_options'] ) && check_admin_referer( 'pprh_save_admin_options', 'pprh_admin_options_nonce' ) ) {
			update_option( 'pprh_autoload_preconnects', wp_unslash( $_POST['pprh_preconnect_status'] ) );
			update_option( 'pprh_disable_wp_hints', wp_unslash( $_POST['pprh_disable_wp_hints_option'] ) );
			update_option( 'pprh_allow_unauth', wp_unslash( $_POST['pprh_pprh_allow_unauth_option'] ) );
			update_option( 'pprh_html_head', wp_unslash( $_POST['pprh_html_head'] ) );
		}
	}

	public function settings_html() {

		wp_nonce_field( 'pprh_save_admin_options', 'pprh_admin_options_nonce' );
		?>
		<h2 style="margin-top: 30px;"><?php esc_html_e( 'Settings', 'pprh' ); ?></h2>

		<table class="pprh-settings-table">
			<tbody>

			<?php
			$this->auto_set_hints();
			$this->disable_auto_wp_hints();
			$this->allow_unauth();
			$this->reset_preconnects();
			$this->set_hint_destination();
			?>
			</tbody>

			<tfoot>
				<tr>
					<td colspan="3">
						<input type="submit" name="pprh_save_user_options" class="button button-primary" value="<?php esc_attr_e( 'Save Changes', 'pprh' ); ?>" />
					</td>
				</tr>

			</tfoot>

		</table>

		<?php
	}

	public function auto_set_hints() {
		?>
		<tr>
			<th>
				<?php esc_html_e( 'Automatically set preconnect hints?', 'pprh' ); ?>
			</th>

			<td>
				<span class="pprh-help-tip-hint">
					<span><?php esc_html_e( 'Preconnect hints from JavaScript, CSS, and image resources loaded from external domains will be created with Ajax and preconnect automatically.', 'pprh' ); ?></span>
				</span>
			</td>

			<td>
				<select name="pprh_preconnect_status">
					<option value="true" <?php $this->get_option_status( 'pprh_autoload_preconnects', 'true' ); ?>>
						<?php esc_html_e( 'Yes', 'pprh' ); ?>
					</option>
					<option value="false" <?php $this->get_option_status( 'pprh_autoload_preconnects', 'false' ); ?>>
						<?php esc_html_e( 'No', 'pprh' ); ?>
					</option>
				</select>
			</td>
		</tr>

		<?php
	}

	public function disable_auto_wp_hints() {
		?>
		<tr>
			<th>
				<?php esc_html_e( 'Disable automatically generated WordPress resource hints?', 'pprh' ); ?>
			</th>

			<td>
				<span class="pprh-help-tip-hint">
					<span><?php esc_html_e( 'This option will remove three resource hints automatically generated by WordPress, as of 4.8.2.', 'pprh' ); ?></span>
				</span>
			</td>

			<td>
				<select name="pprh_disable_wp_hints_option">
					<option value="true" <?php $this->get_option_status( 'pprh_disable_wp_hints', 'true' ); ?>>
						<?php esc_html_e( 'Yes', 'pprh' ); ?>
					</option>
					<option value="false" <?php $this->get_option_status( 'pprh_disable_wp_hints', 'false' ); ?>>
						<?php esc_html_e( 'No', 'pprh' ); ?>
					</option>
				</select>
			</td>
		</tr>

		<?php  
	}

	public function allow_unauth() {
		?>
		<tr>
			<th>
				<?php esc_html_e( 'Allow unauthenticated users to automatically set preconnect hints via Ajax?', 'pprh' ); ?>
			</th>

			<td>
				<span class="pprh-help-tip-hint">
					<span><?php esc_html_e( 'Automatically set preconnect hints are initially set once by the first user to access that page.', 'pprh' ); ?></span>
				</span>
			</td>

			<td>
				<select name="pprh_pprh_allow_unauth_option">
					<option value="true" <?php $this->get_option_status( 'pprh_allow_unauth', 'true' ); ?>>
						<?php esc_html_e( 'Yes', 'pprh' ); ?>
					</option>
					<option value="false" <?php $this->get_option_status( 'pprh_allow_unauth', 'false' ); ?>>
						<?php esc_html_e( 'No', 'pprh' ); ?>
					</option>
				</select>
			</td>
		</tr>
		<?php
	}

	public function reset_preconnects() {
		?>
		<tr>
			<th>
				<?php esc_html_e( 'Reset automatically created preconnect links?', 'pprh' ); ?>
			</th>

			<td>
				<span class="pprh-help-tip-hint">
					<span><?php esc_html_e( 'This will reset automatically created preconnect hints.', 'pprh' ); ?></span>
				</span>
			</td>

			<td>
				<input type="submit" name="pprh_preconnects_set" id="pprhPreconnectReset" class="button-secondary" value="Reset"/>
			</td>
		</tr>

		<?php
	}

    public function set_hint_destination() {
        $active_cache_plugin = $this->get_cache_info();

        ?>
        <tr>
            <th>
                <?php esc_html_e( 'Send resource hints in HTML head or HTTP header?', 'pprh' ); ?>
            </th>

            <td>
				<span class="pprh-help-tip-hint">
					<span><?php esc_html_e( 'Send hints', 'pprh' ); ?></span>
				</span>
            </td>

            <td>
                <select id="pprhHintLocation" name="pprh_html_head">
                    <option value="true" <?php $this->get_option_status( 'pprh_html_head', 'true' ); ?>>
                        <?php esc_html_e( 'HTML <head>', 'pprh' ); ?>
                    </option>
                    <option value="false" <?php $this->get_option_status( 'pprh_html_head', 'false' ); ?>>
                        <?php esc_html_e( 'HTTP Header', 'pprh' ); ?>
                    </option>
                </select>

                <?php
                    if (strlen($active_cache_plugin) > 0) {
                        echo "<span id='pprhCachePlugins'>$active_cache_plugin</span>";
                        echo "<p id='pprhBox'></p>";
                    }
                ?>
            </td>
        </tr>

        <?php
    }

	public function get_option_status( $option_name, $val ) {
		echo esc_html( ( get_option( $option_name ) === $val ? 'selected=selected' : '' ) );
	}

    private function get_cache_info() {

        $cache_plugins = array(
            'cache-control/cache-control.php' =>        'Cache Control',
            'cache-enabler/cache-enabler.php' =>        'Cache Enabler',
            'comet-cache/comet-cache.php' =>            'Comet Cache',
            'hyper-cache/plugin.php' =>                 'Hyper Cache',
            'litespeed-cache/litespeed-cache.php' =>    'LiteSpeed Cache',
            'redis-cache/redis-cache.php' =>            'Redis Cache',
            'w3-total-cache/w3-total-cache.php' =>      'W3 Total Cache',
            'wp-fastest-cache/wpFastestCache.php' =>    'WP Fastest Cache',
            'wp-rocket/wp-rocket.php' =>                'WP Rocket',
            'wp-super-cache/wp-cache.php' =>            'WP Super Cache',
        );

        foreach ($cache_plugins as $cache_plugin => $name) {
            if (is_plugin_active($cache_plugin)) {
                return $name;
            }
        }
    }

}

if ( is_admin() ) {
	new PPRH_Settings();
}
